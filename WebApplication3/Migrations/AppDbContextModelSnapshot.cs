// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinanceAnalytic.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinanceAnalytic.Models.Accumulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GoalId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SumInCurrency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("GoalId");

                    b.HasIndex("UserId");

                    b.ToTable("Accumulations");
                });

            modelBuilder.Entity("FinanceAnalytic.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "KGS"
                        },
                        new
                        {
                            Id = 2,
                            Name = "USD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "EUR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "RUB"
                        },
                        new
                        {
                            Id = 5,
                            Name = "KZT"
                        });
                });

            modelBuilder.Entity("FinanceAnalytic.Models.ImportanceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("NumericEquivalent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImportanceCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Не важно",
                            NumericEquivalent = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Можно обойтись",
                            NumericEquivalent = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Желательно",
                            NumericEquivalent = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Необходимо",
                            NumericEquivalent = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Крайне необходимо",
                            NumericEquivalent = 4
                        });
                });

            modelBuilder.Entity("FinanceAnalytic.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncomeCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("IncomeSubCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SumInCurrency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IncomeCategoryId");

                    b.HasIndex("IncomeSubCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("FinanceAnalytic.Models.IncomeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("IncomeCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Другие источники"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Зарплата"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Гос. выплаты"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Сдача в аренду"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Предпринимательство"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Подсобное хозяйство"
                        });
                });

            modelBuilder.Entity("FinanceAnalytic.Models.IncomeSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IncomeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncomeCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("IncomeSubCategories");
                });

            modelBuilder.Entity("FinanceAnalytic.Models.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAchived")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("FinanceAnalytic.Models.PlanedSpending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PeriodBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SpendingCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("SpendingSubCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SumInCurrency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SpendingCategoryId");

                    b.HasIndex("SpendingSubCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("PlanedSpendings");
                });

            modelBuilder.Entity("FinanceAnalytic.Models.Spending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImportanceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SpendingCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("SpendingSubCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SumInCurrency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ImportanceCategoryId");

                    b.HasIndex("SpendingCategoryId");

                    b.HasIndex("SpendingSubCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Spendings");
                });

            modelBuilder.Entity("FinanceAnalytic.Models.SpendingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("SpendingCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Другое"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Транспорт"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Оплата"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Покупки"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Продукты"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Питание вне дома"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Досуг"
                        },
                        new
                        {
                            Id = 8,
                            Name = "На здоровье"
                        });
                });

            modelBuilder.Entity("FinanceAnalytic.Models.SpendingSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("SpendingCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpendingCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("SpendingSubCategories");
                });

            modelBuilder.Entity("FinanceAnalytic.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyId = 1,
                            Login = "admin",
                            Password = "admin123",
                            RegistrationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserRoleId = 1
                        });
                });

            modelBuilder.Entity("FinanceAnalytic.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("FinanceAnalytic.Models.Accumulation", b =>
                {
                    b.HasOne("FinanceAnalytic.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("FinanceAnalytic.Models.Models.Goal", "Goal")
                        .WithMany()
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceAnalytic.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceAnalytic.Models.Income", b =>
                {
                    b.HasOne("FinanceAnalytic.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("FinanceAnalytic.Models.IncomeCategory", "IncomeCategory")
                        .WithMany("Incomes")
                        .HasForeignKey("IncomeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceAnalytic.Models.IncomeSubCategory", "IncomeSubCategory")
                        .WithMany("Incomes")
                        .HasForeignKey("IncomeSubCategoryId");

                    b.HasOne("FinanceAnalytic.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceAnalytic.Models.IncomeSubCategory", b =>
                {
                    b.HasOne("FinanceAnalytic.Models.IncomeCategory", "IncomeCategory")
                        .WithMany()
                        .HasForeignKey("IncomeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceAnalytic.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceAnalytic.Models.Models.Goal", b =>
                {
                    b.HasOne("FinanceAnalytic.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceAnalytic.Models.PlanedSpending", b =>
                {
                    b.HasOne("FinanceAnalytic.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("FinanceAnalytic.Models.SpendingCategory", "SpendingCategory")
                        .WithMany()
                        .HasForeignKey("SpendingCategoryId");

                    b.HasOne("FinanceAnalytic.Models.SpendingSubCategory", "SpendingSubCategory")
                        .WithMany()
                        .HasForeignKey("SpendingSubCategoryId");

                    b.HasOne("FinanceAnalytic.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceAnalytic.Models.Spending", b =>
                {
                    b.HasOne("FinanceAnalytic.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("FinanceAnalytic.Models.ImportanceCategory", "ImportanceCategory")
                        .WithMany("Spendings")
                        .HasForeignKey("ImportanceCategoryId");

                    b.HasOne("FinanceAnalytic.Models.SpendingCategory", "SpendingCategory")
                        .WithMany("Spendings")
                        .HasForeignKey("SpendingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceAnalytic.Models.SpendingSubCategory", "SpendingSubCategory")
                        .WithMany()
                        .HasForeignKey("SpendingSubCategoryId");

                    b.HasOne("FinanceAnalytic.Models.User", "User")
                        .WithMany("Spendings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceAnalytic.Models.SpendingSubCategory", b =>
                {
                    b.HasOne("FinanceAnalytic.Models.SpendingCategory", "SpendingCategory")
                        .WithMany()
                        .HasForeignKey("SpendingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceAnalytic.Models.User", "User")
                        .WithMany("SpendingSubCategory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceAnalytic.Models.User", b =>
                {
                    b.HasOne("FinanceAnalytic.Models.Currency", "Currency")
                        .WithMany("Users")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceAnalytic.Models.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
